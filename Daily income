<!DOCTYPE html>
<html lang="fa">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Daily Income - نرم افزار حسابداری کافی نت</title>
  <link rel="manifest" href="manifest.json" />
  <meta name="theme-color" content="#1abc9c" />
  <link href="https://cdn.jsdelivr.net/npm/normalize.css@8.0.1/normalize.min.css" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.rtl.min.css" rel="stylesheet" />
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body {
      font-family: Vazir, Tahoma, sans-serif;
      direction: rtl;
      background: #f0f4f8;
      padding: 15px;
      max-width: 700px;
      margin: auto;
      user-select: none;
    }
    h1 {
      color: #16a085;
      text-align: center;
      margin-bottom: 20px;
      font-weight: 700;
    }
    .card {
      box-shadow: 0 4px 8px rgb(0 0 0 / 0.1);
      border-radius: 10px;
    }
    .form-control, .form-select {
      border-radius: 8px;
      font-size: 16px;
    }
    button {
      transition: background-color 0.3s ease;
    }
    button:hover {
      opacity: 0.9;
    }
    .record-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 8px 10px;
      border-bottom: 1px solid #ddd;
      font-size: 14px;
    }
    .record-item:hover {
      background-color: #e0f7f5;
      transition: background-color 0.3s;
    }
    .record-type-income {
      color: #2ecc71;
      font-weight: 600;
    }
    .record-type-expense {
      color: #e74c3c;
      font-weight: 600;
    }
    .btn-delete {
      background: #e74c3c;
      border: none;
      color: white;
      padding: 4px 8px;
      border-radius: 6px;
      font-size: 13px;
      cursor: pointer;
    }
    .btn-delete:hover {
      background: #c0392b;
    }
    #recordList {
      max-height: 320px;
      overflow-y: auto;
      margin-top: 15px;
      border-radius: 8px;
      background: white;
    }
    .filter-group {
      margin-top: 15px;
      display: flex;
      gap: 10px;
      flex-wrap: wrap;
      justify-content: center;
    }
    .filter-group select, .filter-group input {
      flex-grow: 1;
      max-width: 200px;
    }
    .summary {
      margin-top: 25px;
      background: white;
      border-radius: 10px;
      padding: 15px;
      box-shadow: 0 4px 12px rgb(0 0 0 / 0.1);
      font-size: 16px;
      font-weight: 600;
      color: #34495e;
      text-align: center;
    }
    .btn-export {
      margin-top: 15px;
      background-color: #2980b9;
      color: white;
      border-radius: 10px;
      padding: 10px 15px;
      cursor: pointer;
      font-weight: 600;
      transition: background-color 0.3s ease;
    }
    .btn-export:hover {
      background-color: #1c5980;
    }
    footer {
      text-align: center;
      margin-top: 40px;
      color: #999;
      font-size: 14px;
      user-select: none;
    }
  </style>
</head>
<body>

  <h1>نرم افزار حسابداری کافی نت - Daily Income</h1>

  <div class="card p-4">
    <div class="mb-3">
      <label for="type" class="form-label">نوع تراکنش</label>
      <select id="type" class="form-select">
        <option value="income">درآمد</option>
        <option value="expense">هزینه</option>
      </select>
    </div>

    <div class="mb-3">
      <label for="category" class="form-label">دسته‌بندی</label>
      <select id="category" class="form-select">
        <option value="چاپ">چاپ</option>
        <option value="پرینت">پرینت</option>
        <option value="اجاره">اجاره</option>
        <option value="اینترنت">اینترنت</option>
        <option value="سایر">سایر</option>
      </select>
    </div>

    <div class="mb-3">
      <label for="desc" class="form-label">توضیح (اختیاری)</label>
      <input type="text" id="desc" class="form-control" placeholder="مثلاً پرداخت قبض برق" />
    </div>

    <div class="mb-3">
      <label for="amount" class="form-label">مبلغ (تومان)</label>
      <input type="number" id="amount" class="form-control" placeholder="مثلاً 10000" />
    </div>

    <button class="btn btn-success w-100" onclick="addRecord()">ثبت تراکنش</button>
  </div>

  <div class="filter-group">
    <select id="filterType" class="form-select" onchange="updateDisplay()">
      <option value="all">نمایش همه تراکنش‌ها</option>
      <option value="income">فقط درآمد</option>
      <option value="expense">فقط هزینه</option>
    </select>

    <select id="filterCategory" class="form-select" onchange="updateDisplay()">
      <option value="all">همه دسته‌بندی‌ها</option>
      <option value="چاپ">چاپ</option>
      <option value="پرینت">پرینت</option>
      <option value="اجاره">اجاره</option>
      <option value="اینترنت">اینترنت</option>
      <option value="سایر">سایر</option>
    </select>

    <input type="text" id="searchDesc" class="form-control" placeholder="جستجوی توضیحات..." oninput="updateDisplay()" />
  </div>

  <div id="recordList" class="mt-3"></div>

  <div class="summary" id="summaryBox">
    <div>جمع کل درآمد: <span id="totalIncome">0</span> تومان</div>
    <div>جمع کل هزینه: <span id="totalExpense">0</span> تومان</div>
    <div style="font-size: 1.3em; margin-top: 10px;">سود خالص: <span id="netProfit">0</span> تومان</div>
  </div>

  <canvas id="incomeChart" style="margin-top: 30px;"></canvas>

  <button class="btn-export" onclick="exportCSV()">خروجی CSV</button>

  <footer>
    نسخه 1.0 - ساخته شده توسط شما
  </footer>

  <script>
    // بارگذاری داده‌ها از localStorage
    let records = JSON.parse(localStorage.getItem('dailyIncomeRecords') || '[]');

    const totalIncomeEl = document.getElementById('totalIncome');
    const totalExpenseEl = document.getElementById('totalExpense');
    const netProfitEl = document.getElementById('netProfit');
    const recordListEl = document.getElementById('recordList');

    // افزودن رکورد جدید
    function addRecord() {
      const type = document.getElementById('type').value;
      const category = document.getElementById('category').value;
      const desc = document.getElementById('desc').value.trim();
      const amount = Number(document.getElementById('amount').value);

      if (!amount || amount <= 0) {
        alert('لطفاً مبلغ معتبر وارد کنید.');
        return;
      }

      const newRecord = {
        id: Date.now(),
        type,
        category,
        desc,
        amount,
        date: new Date().toISOString()
      };

      records.push(newRecord);
      saveAndUpdate();

      // پاک کردن فرم
      document.getElementById('desc').value = '';
      document.getElementById('amount').value = '';
    }

    // ذخیره داده‌ها و بروزرسانی نمایش
    function saveAndUpdate() {
      localStorage.setItem('dailyIncomeRecords', JSON.stringify(records));
      updateDisplay();
    }

    // حذف رکورد
    function deleteRecord(id) {
      if(confirm('آیا مطمئنید که می‌خواهید این تراکنش حذف شود؟')) {
        records = records.filter(r => r.id !== id);
        saveAndUpdate();
      }
    }

    // فیلتر و نمایش داده‌ها
    function updateDisplay() {
      const filterType = document.getElementById('filterType').value;
      const filterCategory = document.getElementById('filterCategory').value;
      const searchDesc = document.getElementById('searchDesc').value.trim().toLowerCase();

      let income = 0;
      let expense = 0;

      recordListEl.innerHTML = '';

      let filteredRecords = records;

      if (filterType !== 'all') {
        filteredRecords = filteredRecords.filter(r => r.type === filterType);
      }
      if (filterCategory !== 'all') {
        filteredRecords = filteredRecords.filter(r => r.category === filterCategory);
      }
      if (searchDesc !== '') {
        filteredRecords = filteredRecords.filter(r => r.desc.toLowerCase().includes(searchDesc));
      }

      filteredRecords.sort((a,b) => new Date(b.date) - new Date(a.date)); // مرتب سازی بر اساس تاریخ

      filteredRecords.forEach(r => {
        if (r.type === 'income') income += r.amount;
        else expense += r.amount;

        const div = document.createElement('div');
        div.className = 'record-item';

        div.innerHTML = `
          <div>
            <span class="record-type-${r.type}">${r.type === 'income' ? 'درآمد' : 'هزینه'}</span> |
            دسته: <strong>${r.category}</strong> |
            توضیح: ${r.desc || '-'} |
            مبلغ: ${r.amount.toLocaleString()} تومان |
            <small>${new Date(r.date).toLocaleDateString('fa-IR')}</small>
          </div>
          <button class="btn-delete" onclick="deleteRecord(${r.id})">حذف</button>
        `;

        recordListEl.appendChild(div);
      });

      totalIncomeEl.textContent = income.toLocaleString();
      totalExpenseEl.textContent = expense.toLocaleString();
      netProfitEl.textContent = (income - expense).toLocaleString();

      updateChart(income, expense);
    }

    // نمودار دایره‌ای
    let myChart;
    function updateChart(income, expense) {
      const ctx = document.getElementById('incomeChart').getContext('2d');

      if(myChart) myChart.destroy();

      myChart = new Chart(ctx, {
        type: 'doughnut',
        data: {
          labels: ['درآمد', 'هزینه'],
          datasets: [{
            data: [income, expense],
            backgroundColor: ['#1abc9c', '#e74c3c']
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: { position: 'bottom', labels: { font: { size: 16 } } }
          }
        }
      });
    }

    // خروجی CSV برای انتقال یا بکاپ
    function exportCSV() {
      if(records.length === 0) {
        alert('هیچ داده‌ای برای خروجی گرفتن وجود ندارد!');
        return;
      }

      let csvContent = "data:text/csv;charset=utf-8,";
      csvContent += "نوع,دسته‌بندی,توضیح,مبلغ,تاریخ\n";

      records.forEach(r => {
        const row = [
          r.type === 'income' ? 'درآمد' : 'هزینه',
          r.category,
          `"${r.desc.replace(/"/g, '""')}"`,
          r.amount,
          new Date(r.date).toLocaleDateString('fa-IR')
        ].join(",");
        csvContent += row + "\n";
      });

      const encodedUri = encodeURI(csvContent);
      const link = document.createElement("a");
      link.setAttribute("href", encodedUri);
      link.setAttribute("download", "daily_income_records.csv");
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    }

    // بارگذاری اولیه و نمایش داده‌ها
    updateDisplay();

    // ثبت Service Worker برای PWA (برای نصب روی موبایل)
    if ('serviceWorker' in navigator) {
      navigator.serviceWorker.register('sw.js')
        .then(() => console.log('Service Worker ثبت شد'))
        .catch(() => console.log('ثبت Service Worker شکست خورد'));
    }
  </script>
</body>
</html>
